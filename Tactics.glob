DIGEST 529860815e59968b01a898fbe17854f8
FLF.Tactics
R666:669 LF.Poly <> <> lib
prf 888:893 <> silly1
R915:917 Coq.Init.Datatypes <> nat ind
R931:940 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R954:962 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R968:970 Coq.Init.Logic <> ::type_scope:x_'='_x not
R963:963 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R965:965 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R967:967 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R964:964 LF.Tactics <> n var
R966:966 LF.Tactics <> o var
R971:971 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R973:973 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R975:975 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R972:972 LF.Tactics <> m var
R974:974 LF.Tactics <> p var
R946:948 Coq.Init.Logic <> ::type_scope:x_'='_x not
R941:941 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R943:943 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R945:945 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R942:942 LF.Tactics <> n var
R944:944 LF.Tactics <> o var
R949:949 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R951:951 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R953:953 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R950:950 LF.Tactics <> n var
R952:952 LF.Tactics <> p var
R927:929 Coq.Init.Logic <> ::type_scope:x_'='_x not
R926:926 LF.Tactics <> n var
R930:930 LF.Tactics <> m var
prf 1443:1448 <> silly2
R1470:1472 Coq.Init.Datatypes <> nat ind
R1486:1495 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1496:1496 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1539:1548 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1554:1556 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1549:1549 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1551:1551 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1553:1553 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1550:1550 LF.Tactics <> n var
R1552:1552 LF.Tactics <> o var
R1557:1557 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1559:1559 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1561:1561 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1558:1558 LF.Tactics <> m var
R1560:1560 LF.Tactics <> p var
R1511:1513 Coq.Init.Datatypes <> nat ind
R1522:1525 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1531:1533 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1526:1526 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1528:1528 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1530:1530 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1527:1527 LF.Tactics <> q var
R1529:1529 LF.Tactics <> o var
R1534:1534 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1536:1536 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1538:1538 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1535:1535 LF.Tactics <> r var
R1537:1537 LF.Tactics <> p var
R1518:1520 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1517:1517 LF.Tactics <> q var
R1521:1521 LF.Tactics <> r var
R1482:1484 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1481:1481 LF.Tactics <> n var
R1485:1485 LF.Tactics <> m var
prf 2043:2049 <> silly2a
R2067:2069 Coq.Init.Datatypes <> nat ind
R2091:2100 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2101:2101 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2148:2157 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2161:2163 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2158:2158 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2160:2160 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2159:2159 LF.Tactics <> n var
R2164:2164 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2166:2166 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2165:2165 LF.Tactics <> m var
R2116:2118 Coq.Init.Datatypes <> nat ind
R2135:2138 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2142:2144 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2139:2139 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2141:2141 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2140:2140 LF.Tactics <> q var
R2145:2145 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2147:2147 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2146:2146 LF.Tactics <> r var
R2127:2129 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2122:2122 LF.Poly <> :::'('_x_','_x_')' not
R2124:2124 LF.Poly <> :::'('_x_','_x_')' not
R2126:2126 LF.Poly <> :::'('_x_','_x_')' not
R2123:2123 LF.Tactics <> q var
R2125:2125 LF.Tactics <> q var
R2130:2130 LF.Poly <> :::'('_x_','_x_')' not
R2132:2132 LF.Poly <> :::'('_x_','_x_')' not
R2134:2134 LF.Poly <> :::'('_x_','_x_')' not
R2131:2131 LF.Tactics <> r var
R2133:2133 LF.Tactics <> r var
R2083:2085 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2078:2078 LF.Poly <> :::'('_x_','_x_')' not
R2080:2080 LF.Poly <> :::'('_x_','_x_')' not
R2082:2082 LF.Poly <> :::'('_x_','_x_')' not
R2079:2079 LF.Tactics <> n var
R2081:2081 LF.Tactics <> n var
R2086:2086 LF.Poly <> :::'('_x_','_x_')' not
R2088:2088 LF.Poly <> :::'('_x_','_x_')' not
R2090:2090 LF.Poly <> :::'('_x_','_x_')' not
R2087:2087 LF.Tactics <> m var
R2089:2089 LF.Tactics <> m var
prf 2358:2365 <> silly_ex
R2374:2374 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2420:2429 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2443:2451 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2459:2461 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2452:2456 LF.Basics <> evenb def
R2462:2465 LF.Basics <> true constr
R2436:2438 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2430:2433 LF.Basics <> oddb def
R2439:2442 LF.Basics <> true constr
R2399:2402 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2413:2415 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2403:2406 LF.Basics <> oddb def
R2409:2409 Coq.Init.Datatypes <> S constr
R2411:2411 LF.Tactics <> n var
R2416:2419 LF.Basics <> true constr
R2392:2394 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2385:2389 LF.Basics <> evenb def
R2391:2391 LF.Tactics <> n var
R2395:2398 LF.Basics <> true constr
prf 2698:2712 <> silly3_firsttry
R2728:2730 Coq.Init.Datatypes <> nat ind
R2754:2763 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2778:2780 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2764:2764 LF.Basics <> ::nat_scope:x_'=?'_x not
R2772:2776 LF.Basics <> ::nat_scope:x_'=?'_x not
R2765:2765 Coq.Init.Datatypes <> S constr
R2768:2768 Coq.Init.Datatypes <> S constr
R2770:2770 LF.Tactics <> n var
R2781:2784 LF.Basics <> true constr
R2743:2746 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2753:2753 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2739:2742 LF.Basics <> true constr
R2748:2751 LF.Basics <> ::nat_scope:x_'=?'_x not
R2747:2747 LF.Tactics <> n var
prf 3326:3338 <> rev_exercise1
R3357:3360 LF.Poly <> list ind
R3362:3364 Coq.Init.Datatypes <> nat ind
R3383:3391 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3394:3396 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3392:3393 LF.Tactics <> l' var
R3397:3399 LF.Poly <> rev def
R3401:3401 LF.Tactics <> l var
R3374:3376 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3373:3373 LF.Tactics <> l var
R3377:3379 LF.Poly <> rev def
R3381:3382 LF.Tactics <> l' var
R3448:3461 LF.Poly <> rev_involutive thm
R3448:3461 LF.Poly <> rev_involutive thm
def 3930:3945 <> trans_eq_example
R3971:3973 Coq.Init.Datatypes <> nat ind
R3995:4003 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4017:4025 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4031:4033 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4026:4026 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4028:4028 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4030:4030 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4027:4027 LF.Tactics <> a var
R4029:4029 LF.Tactics <> b var
R4034:4034 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4036:4036 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4038:4038 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4035:4035 LF.Tactics <> e var
R4037:4037 LF.Tactics <> f var
R4009:4011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4004:4004 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4006:4006 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4008:4008 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4005:4005 LF.Tactics <> c var
R4007:4007 LF.Tactics <> d var
R4012:4012 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4014:4014 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4016:4016 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4013:4013 LF.Tactics <> e var
R4015:4015 LF.Tactics <> f var
R3987:3989 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3982:3982 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R3984:3984 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R3986:3986 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R3983:3983 LF.Tactics <> a var
R3985:3985 LF.Tactics <> b var
R3990:3990 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R3992:3992 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R3994:3994 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R3991:3991 LF.Tactics <> c var
R3993:3993 LF.Tactics <> d var
prf 4285:4292 <> trans_eq
R4321:4321 LF.Tactics <> X var
R4332:4335 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4341:4344 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4346:4348 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4345:4345 LF.Tactics <> n var
R4349:4349 LF.Tactics <> o var
R4337:4339 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4336:4336 LF.Tactics <> m var
R4340:4340 LF.Tactics <> o var
R4328:4330 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4327:4327 LF.Tactics <> n var
R4331:4331 LF.Tactics <> m var
def 4605:4621 <> trans_eq_example'
R4647:4649 Coq.Init.Datatypes <> nat ind
R4671:4679 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4693:4701 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4707:4709 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4702:4702 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4704:4704 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4706:4706 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4703:4703 LF.Tactics <> a var
R4705:4705 LF.Tactics <> b var
R4710:4710 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4712:4712 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4714:4714 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4711:4711 LF.Tactics <> e var
R4713:4713 LF.Tactics <> f var
R4685:4687 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4680:4680 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4682:4682 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4684:4684 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4681:4681 LF.Tactics <> c var
R4683:4683 LF.Tactics <> d var
R4688:4688 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4690:4690 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4692:4692 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4689:4689 LF.Tactics <> e var
R4691:4691 LF.Tactics <> f var
R4663:4665 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4658:4658 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4660:4660 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4662:4662 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4659:4659 LF.Tactics <> a var
R4661:4661 LF.Tactics <> b var
R4666:4666 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4668:4668 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4670:4670 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4667:4667 LF.Tactics <> c var
R4669:4669 LF.Tactics <> d var
R5155:5155 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5157:5157 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5159:5159 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5137:5144 LF.Tactics <> trans_eq thm
R5155:5155 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5157:5157 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5159:5159 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5137:5144 LF.Tactics <> trans_eq thm
def 5469:5485 <> trans_eq_exercise
R5507:5509 Coq.Init.Datatypes <> nat ind
R5534:5542 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5554:5562 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5563:5563 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5569:5573 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5584:5584 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5565:5567 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R5564:5564 LF.Tactics <> n var
R5568:5568 LF.Tactics <> p var
R5574:5581 LF.Basics <> minustwo def
R5583:5583 LF.Tactics <> o var
R5543:5543 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5549:5552 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5545:5547 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R5544:5544 LF.Tactics <> n var
R5548:5548 LF.Tactics <> p var
R5553:5553 LF.Tactics <> m var
R5519:5522 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5533:5533 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5518:5518 LF.Tactics <> m var
R5523:5530 LF.Basics <> minustwo def
R5532:5532 LF.Tactics <> o var
prf 7042:7052 <> S_injective
R7070:7072 Coq.Init.Datatypes <> nat ind
R7087:7092 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7094:7096 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7093:7093 LF.Tactics <> n var
R7097:7097 LF.Tactics <> m var
R7081:7083 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7078:7078 Coq.Init.Datatypes <> S constr
R7080:7080 LF.Tactics <> n var
R7084:7084 Coq.Init.Datatypes <> S constr
R7086:7086 LF.Tactics <> m var
R7139:7141 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7142:7145 Coq.Init.Peano <> pred syndef
R7148:7148 Coq.Init.Datatypes <> S constr
R7139:7141 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7142:7145 Coq.Init.Peano <> pred syndef
R7148:7148 Coq.Init.Datatypes <> S constr
prf 7590:7601 <> S_injective'
R7619:7621 Coq.Init.Datatypes <> nat ind
R7636:7641 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7643:7645 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7642:7642 LF.Tactics <> n var
R7646:7646 LF.Tactics <> m var
R7630:7632 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7627:7627 Coq.Init.Datatypes <> S constr
R7629:7629 LF.Tactics <> n var
R7633:7633 Coq.Init.Datatypes <> S constr
R7635:7635 LF.Tactics <> m var
prf 8078:8090 <> injection_ex1
R8110:8112 Coq.Init.Datatypes <> nat ind
R8133:8138 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8142:8144 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8139:8139 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8141:8141 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8140:8140 LF.Tactics <> n var
R8145:8145 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8147:8147 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8146:8146 LF.Tactics <> m var
R8124:8126 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8118:8118 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8120:8121 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8123:8123 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8119:8119 LF.Tactics <> n var
R8122:8122 LF.Tactics <> m var
R8127:8127 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8129:8130 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8132:8132 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8128:8128 LF.Tactics <> o var
R8131:8131 LF.Tactics <> o var
prf 8348:8360 <> injection_ex2
R8378:8380 Coq.Init.Datatypes <> nat ind
R8395:8400 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8402:8404 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8401:8401 LF.Tactics <> n var
R8405:8405 LF.Tactics <> m var
R8389:8391 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8386:8386 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8388:8388 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8387:8387 LF.Tactics <> n var
R8392:8392 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8394:8394 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8393:8393 LF.Tactics <> m var
def 8551:8563 <> injection_ex3
R8594:8594 LF.Tactics <> X var
R8604:8607 LF.Poly <> list ind
R8609:8609 LF.Tactics <> X var
R8635:8640 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8656:8661 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8663:8665 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8662:8662 LF.Tactics <> x var
R8666:8666 LF.Tactics <> y var
R8647:8649 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8642:8645 LF.Poly <> :::x_'::'_x not
R8641:8641 LF.Tactics <> y var
R8646:8646 LF.Tactics <> l var
R8651:8654 LF.Poly <> :::x_'::'_x not
R8650:8650 LF.Tactics <> x var
R8655:8655 LF.Tactics <> j var
R8626:8628 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8616:8619 LF.Poly <> :::x_'::'_x not
R8615:8615 LF.Tactics <> x var
R8621:8624 LF.Poly <> :::x_'::'_x not
R8620:8620 LF.Tactics <> y var
R8625:8625 LF.Tactics <> l var
R8630:8633 LF.Poly <> :::x_'::'_x not
R8629:8629 LF.Tactics <> z var
R8634:8634 LF.Tactics <> j var
prf 9531:9537 <> eqb_0_l
R9567:9570 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9572:9574 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9571:9571 LF.Tactics <> n var
R9560:9562 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9555:9558 LF.Basics <> ::nat_scope:x_'=?'_x not
R9559:9559 LF.Tactics <> n var
R9563:9566 LF.Basics <> true constr
prf 10367:10382 <> discriminate_ex1
R10398:10400 Coq.Init.Datatypes <> nat ind
R10413:10418 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10424:10426 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10420:10422 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R10409:10411 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10406:10406 Coq.Init.Datatypes <> S constr
R10408:10408 LF.Tactics <> n var
R10412:10412 Coq.Init.Datatypes <> O constr
prf 10491:10506 <> discriminate_ex2
R10524:10526 Coq.Init.Datatypes <> nat ind
R10544:10549 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10553:10555 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10550:10550 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10552:10552 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10551:10551 LF.Tactics <> n var
R10556:10556 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10558:10558 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10557:10557 LF.Tactics <> m var
R10537:10539 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10532:10536 LF.Basics <> false constr
R10540:10543 LF.Basics <> true constr
def 11079:11094 <> discriminate_ex3
R11127:11127 LF.Tactics <> X var
R11137:11140 LF.Poly <> list ind
R11142:11142 LF.Tactics <> X var
R11166:11173 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11175:11177 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11174:11174 LF.Tactics <> x var
R11178:11178 LF.Tactics <> z var
R11161:11163 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11151:11154 LF.Poly <> :::x_'::'_x not
R11150:11150 LF.Tactics <> x var
R11156:11159 LF.Poly <> :::x_'::'_x not
R11155:11155 LF.Tactics <> y var
R11160:11160 LF.Tactics <> l var
R11164:11165 LF.Poly <> :::'['_']' not
prf 11525:11531 <> f_equal
R11560:11563 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11564:11564 LF.Tactics <> B var
R11559:11559 LF.Tactics <> A var
R11573:11573 LF.Tactics <> A var
R11584:11587 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11591:11593 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11588:11588 LF.Tactics <> f var
R11590:11590 LF.Tactics <> x var
R11594:11594 LF.Tactics <> f var
R11596:11596 LF.Tactics <> y var
R11580:11582 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11579:11579 LF.Tactics <> x var
R11583:11583 LF.Tactics <> y var
prf 12061:12065 <> S_inj
R12083:12085 Coq.Init.Datatypes <> nat ind
R12093:12096 LF.Basics <> bool ind
R12123:12132 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12139:12141 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12134:12137 LF.Basics <> ::nat_scope:x_'=?'_x not
R12133:12133 LF.Tactics <> n var
R12138:12138 LF.Tactics <> m var
R12142:12142 LF.Tactics <> b var
R12119:12121 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12105:12105 LF.Basics <> ::nat_scope:x_'=?'_x not
R12109:12114 LF.Basics <> ::nat_scope:x_'=?'_x not
R12118:12118 LF.Basics <> ::nat_scope:x_'=?'_x not
R12106:12106 Coq.Init.Datatypes <> S constr
R12108:12108 LF.Tactics <> n var
R12115:12115 Coq.Init.Datatypes <> S constr
R12117:12117 LF.Tactics <> m var
R12122:12122 LF.Tactics <> b var
prf 12944:12950 <> silly3'
R12966:12968 Coq.Init.Datatypes <> nat ind
R12974:12974 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13013:13019 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13035:13041 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13046:13049 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13064:13064 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13042:13045 LF.Basics <> true constr
R13050:13050 LF.Basics <> ::nat_scope:x_'=?'_x not
R13058:13062 LF.Basics <> ::nat_scope:x_'=?'_x not
R13051:13051 Coq.Init.Datatypes <> S constr
R13054:13054 Coq.Init.Datatypes <> S constr
R13056:13056 LF.Tactics <> n var
R13024:13027 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13034:13034 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13020:13023 LF.Basics <> true constr
R13029:13032 LF.Basics <> ::nat_scope:x_'=?'_x not
R13028:13028 LF.Tactics <> n var
R12988:12991 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13006:13008 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12992:12992 LF.Basics <> ::nat_scope:x_'=?'_x not
R13000:13004 LF.Basics <> ::nat_scope:x_'=?'_x not
R12993:12993 Coq.Init.Datatypes <> S constr
R12996:12996 Coq.Init.Datatypes <> S constr
R12998:12998 LF.Tactics <> n var
R13009:13012 LF.Basics <> true constr
R12981:12983 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12976:12979 LF.Basics <> ::nat_scope:x_'=?'_x not
R12975:12975 LF.Tactics <> n var
R12984:12987 LF.Basics <> true constr
prf 13833:13850 <> plus_n_n_injective
R13884:13892 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13894:13896 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13893:13893 LF.Tactics <> n var
R13897:13897 LF.Tactics <> m var
R13876:13878 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13872:13874 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R13871:13871 LF.Tactics <> n var
R13875:13875 LF.Tactics <> n var
R13880:13882 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R13879:13879 LF.Tactics <> m var
R13883:13883 LF.Tactics <> m var
R14177:14185 LF.Induction <> plus_n_Sm thm
R14177:14185 LF.Induction <> plus_n_Sm thm
R14177:14185 LF.Induction <> plus_n_Sm thm
R14177:14185 LF.Induction <> plus_n_Sm thm
R14177:14185 LF.Induction <> plus_n_Sm thm
prf 15067:15089 <> double_injective_FAILED
R15129:15137 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15139:15141 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15138:15138 LF.Tactics <> n var
R15142:15142 LF.Tactics <> m var
R15118:15120 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15110:15115 LF.Induction <> double def
R15117:15117 LF.Tactics <> n var
R15121:15126 LF.Induction <> double def
R15128:15128 LF.Tactics <> m var
R15440:15446 LF.Tactics <> f_equal thm
R15440:15446 LF.Tactics <> f_equal thm
prf 17594:17609 <> double_injective
R17649:17657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17659:17661 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17658:17658 LF.Tactics <> n var
R17662:17662 LF.Tactics <> m var
R17638:17640 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17630:17635 LF.Induction <> double def
R17637:17637 LF.Tactics <> n var
R17641:17646 LF.Induction <> double def
R17648:17648 LF.Tactics <> m var
R18512:18518 LF.Tactics <> f_equal thm
R18512:18518 LF.Tactics <> f_equal thm
prf 19400:19407 <> eqb_true
R19440:19443 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19445:19447 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19444:19444 LF.Tactics <> n var
R19448:19448 LF.Tactics <> m var
R19433:19435 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19428:19431 LF.Basics <> ::nat_scope:x_'=?'_x not
R19427:19427 LF.Tactics <> n var
R19432:19432 LF.Tactics <> m var
R19436:19439 LF.Basics <> true constr
prf 19799:19807 <> eqb_true'
R19840:19843 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19845:19847 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19844:19844 LF.Tactics <> n var
R19848:19848 LF.Tactics <> m var
R19833:19835 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19828:19831 LF.Basics <> ::nat_scope:x_'=?'_x not
R19827:19827 LF.Tactics <> n var
R19832:19832 LF.Tactics <> m var
R19836:19839 LF.Basics <> true constr
def 20363:20393 <> manual_grade_for_informal_proof
R20397:20402 Coq.Init.Datatypes <> option ind
R20408:20408 LF.Poly <> ::type_scope:x_'*'_x not
R20405:20407 Coq.Init.Datatypes <> nat ind
R20409:20414 Coq.Strings.String <> string ind
R20420:20423 Coq.Init.Datatypes <> None constr
prf 20697:20725 <> double_injective_take2_FAILED
R20765:20773 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20775:20777 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20774:20774 LF.Tactics <> n var
R20778:20778 LF.Tactics <> m var
R20754:20756 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20746:20751 LF.Induction <> double def
R20753:20753 LF.Tactics <> n var
R20757:20762 LF.Induction <> double def
R20764:20764 LF.Tactics <> m var
R21076:21082 LF.Tactics <> f_equal thm
R21076:21082 LF.Tactics <> f_equal thm
prf 21899:21920 <> double_injective_take2
R21960:21968 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21970:21972 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21969:21969 LF.Tactics <> n var
R21973:21973 LF.Tactics <> m var
R21949:21951 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21941:21946 LF.Induction <> double def
R21948:21948 LF.Tactics <> n var
R21952:21957 LF.Induction <> double def
R21959:21959 LF.Tactics <> m var
R22454:22460 LF.Tactics <> f_equal thm
R22454:22460 LF.Tactics <> f_equal thm
prf 24460:24470 <> eqb_id_true
R24505:24508 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24510:24512 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24509:24509 LF.Tactics <> x var
R24513:24513 LF.Tactics <> y var
R24498:24500 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24488:24493 LF.Lists <> eqb_id def
R24497:24497 LF.Tactics <> y var
R24495:24495 LF.Tactics <> x var
R24501:24504 LF.Basics <> true constr
R24574:24576 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24574:24576 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24589:24596 LF.Tactics <> eqb_true thm
R24589:24596 LF.Tactics <> eqb_true thm
prf 24763:24782 <> nth_error_after_last
R24797:24799 Coq.Init.Datatypes <> nat ind
R24818:24821 LF.Poly <> list ind
R24823:24823 LF.Tactics <> X var
R24844:24852 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24866:24868 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24853:24861 LF.Poly <> nth_error def
R24865:24865 LF.Tactics <> n var
R24863:24863 LF.Tactics <> l var
R24869:24872 Coq.Init.Datatypes <> None constr
R24840:24842 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24832:24837 LF.Poly <> length def
R24839:24839 LF.Tactics <> l var
R24843:24843 LF.Tactics <> n var
def 25497:25502 <> square
R25510:25512 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R25509:25509 LF.Tactics <> n var
R25513:25513 LF.Tactics <> n var
prf 25584:25594 <> square_mult
R25624:25626 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25610:25615 LF.Tactics <> square def
R25619:25621 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R25618:25618 LF.Tactics <> n var
R25622:25622 LF.Tactics <> m var
R25635:25637 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R25627:25632 LF.Tactics <> square def
R25634:25634 LF.Tactics <> n var
R25638:25643 LF.Tactics <> square def
R25645:25645 LF.Tactics <> m var
R25971:25976 LF.Tactics <> square def
R26295:26304 LF.Induction <> mult_assoc thm
R26295:26304 LF.Induction <> mult_assoc thm
R26295:26304 LF.Induction <> mult_assoc thm
R26330:26332 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26326:26328 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26322:26324 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26338:26340 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26334:26336 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26330:26332 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26326:26328 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26322:26324 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26338:26340 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26334:26336 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26359:26367 LF.Induction <> mult_comm thm
R26359:26367 LF.Induction <> mult_comm thm
R26359:26367 LF.Induction <> mult_comm thm
R26376:26385 LF.Induction <> mult_assoc thm
R26376:26385 LF.Induction <> mult_assoc thm
R26411:26420 LF.Induction <> mult_assoc thm
R26411:26420 LF.Induction <> mult_assoc thm
R26411:26420 LF.Induction <> mult_assoc thm
def 26803:26805 <> foo
R26811:26813 Coq.Init.Datatypes <> nat ind
prf 27035:27046 <> silly_fact_1
R27069:27071 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27065:27067 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R27060:27062 LF.Tactics <> foo def
R27064:27064 LF.Tactics <> m var
R27083:27085 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R27072:27074 LF.Tactics <> foo def
R27078:27080 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R27077:27077 LF.Tactics <> m var
def 27318:27320 <> bar
R27335:27335 LF.Tactics <> x var
R27346:27346 Coq.Init.Datatypes <> O constr
R27357:27357 Coq.Init.Datatypes <> S constr
prf 27431:27449 <> silly_fact_2_FAILED
R27472:27474 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27468:27470 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R27463:27465 LF.Tactics <> bar def
R27467:27467 LF.Tactics <> m var
R27486:27488 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R27475:27477 LF.Tactics <> bar def
R27481:27483 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R27480:27480 LF.Tactics <> m var
prf 28475:28486 <> silly_fact_2
R28509:28511 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28505:28507 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28500:28502 LF.Tactics <> bar def
R28504:28504 LF.Tactics <> m var
R28523:28525 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28512:28514 LF.Tactics <> bar def
R28518:28520 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28517:28517 LF.Tactics <> m var
prf 28882:28894 <> silly_fact_2'
R28917:28919 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28913:28915 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28908:28910 LF.Tactics <> bar def
R28912:28912 LF.Tactics <> m var
R28931:28933 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28920:28922 LF.Tactics <> bar def
R28926:28928 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28925:28925 LF.Tactics <> m var
R28965:28967 LF.Tactics <> bar def
def 29580:29587 <> sillyfun
R29594:29596 Coq.Init.Datatypes <> nat ind
R29601:29604 LF.Basics <> bool ind
R29615:29618 LF.Basics <> ::nat_scope:x_'=?'_x not
R29614:29614 LF.Tactics <> n var
R29643:29646 LF.Basics <> ::nat_scope:x_'=?'_x not
R29642:29642 LF.Tactics <> n var
R29667:29671 LF.Basics <> false constr
R29654:29658 LF.Basics <> false constr
R29626:29630 LF.Basics <> false constr
prf 29683:29696 <> sillyfun_false
R29712:29714 Coq.Init.Datatypes <> nat ind
R29730:29732 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29720:29727 LF.Tactics <> sillyfun def
R29729:29729 LF.Tactics <> n var
R29733:29737 LF.Basics <> false constr
R29766:29773 LF.Tactics <> sillyfun def
R29789:29792 LF.Basics <> ::nat_scope:x_'=?'_x not
R29789:29792 LF.Basics <> ::nat_scope:x_'=?'_x not
R29881:29884 LF.Basics <> ::nat_scope:x_'=?'_x not
R29881:29884 LF.Basics <> ::nat_scope:x_'=?'_x not
def 30682:30686 <> split
R30706:30709 LF.Poly <> list ind
R30713:30713 LF.Poly <> ::type_scope:x_'*'_x not
R30712:30712 LF.Tactics <> X var
R30714:30714 LF.Tactics <> Y var
R30735:30735 LF.Poly <> ::type_scope:x_'*'_x not
R30742:30746 LF.Poly <> ::type_scope:x_'*'_x not
R30753:30753 LF.Poly <> ::type_scope:x_'*'_x not
R30736:30739 LF.Poly <> list ind
R30741:30741 LF.Tactics <> X var
R30747:30750 LF.Poly <> list ind
R30752:30752 LF.Tactics <> Y var
R30766:30766 LF.Tactics <> l var
R30777:30778 LF.Poly <> :::'['_']' not
R30783:30783 LF.Poly <> :::'('_x_','_x_')' not
R30786:30787 LF.Poly <> :::'('_x_','_x_')' not
R30790:30790 LF.Poly <> :::'('_x_','_x_')' not
R30784:30785 LF.Poly <> :::'['_']' not
R30788:30789 LF.Poly <> :::'['_']' not
R30802:30805 LF.Poly <> :::x_'::'_x not
R30796:30796 LF.Poly <> :::'('_x_','_x_')' not
R30798:30799 LF.Poly <> :::'('_x_','_x_')' not
R30801:30801 LF.Poly <> :::'('_x_','_x_')' not
R30823:30827 LF.Tactics <> split def
R30844:30844 LF.Poly <> :::'('_x_','_x_')' not
R30847:30848 LF.Poly <> :::'('_x_','_x_')' not
R30851:30851 LF.Poly <> :::'('_x_','_x_')' not
R30856:30856 LF.Poly <> :::'('_x_','_x_')' not
R30864:30865 LF.Poly <> :::'('_x_','_x_')' not
R30873:30873 LF.Poly <> :::'('_x_','_x_')' not
R30858:30861 LF.Poly <> :::x_'::'_x not
R30867:30870 LF.Poly <> :::x_'::'_x not
prf 30983:30995 <> combine_split
R31015:31018 LF.Poly <> list ind
R31022:31024 LF.Poly <> ::type_scope:x_'*'_x not
R31021:31021 LF.Tactics <> X var
R31025:31025 LF.Tactics <> Y var
R31056:31061 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31075:31077 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31062:31068 LF.Poly <> combine def
R31073:31074 LF.Tactics <> l2 var
R31070:31071 LF.Tactics <> l1 var
R31078:31078 LF.Tactics <> l var
R31045:31047 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31038:31042 LF.Tactics <> split def
R31044:31044 LF.Tactics <> l var
R31048:31048 LF.Poly <> :::'('_x_','_x_')' not
R31051:31052 LF.Poly <> :::'('_x_','_x_')' not
R31055:31055 LF.Poly <> :::'('_x_','_x_')' not
R31049:31050 LF.Tactics <> l1 var
R31053:31054 LF.Tactics <> l2 var
R31297:31301 LF.Tactics <> split def
R31297:31301 LF.Tactics <> split def
def 31945:31953 <> sillyfun1
R31960:31962 Coq.Init.Datatypes <> nat ind
R31967:31970 LF.Basics <> bool ind
R31981:31984 LF.Basics <> ::nat_scope:x_'=?'_x not
R31980:31980 LF.Tactics <> n var
R32008:32011 LF.Basics <> ::nat_scope:x_'=?'_x not
R32007:32007 LF.Tactics <> n var
R32031:32035 LF.Basics <> false constr
R32019:32022 LF.Basics <> true constr
R31992:31995 LF.Basics <> true constr
prf 32261:32280 <> sillyfun1_odd_FAILED
R32296:32298 Coq.Init.Datatypes <> nat ind
R32325:32333 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32340:32342 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32334:32337 LF.Basics <> oddb def
R32339:32339 LF.Tactics <> n var
R32343:32346 LF.Basics <> true constr
R32318:32320 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32307:32315 LF.Tactics <> sillyfun1 def
R32317:32317 LF.Tactics <> n var
R32321:32324 LF.Basics <> true constr
R32378:32386 LF.Tactics <> sillyfun1 def
R32408:32411 LF.Basics <> ::nat_scope:x_'=?'_x not
R32408:32411 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 33211:33223 <> sillyfun1_odd
R33239:33241 Coq.Init.Datatypes <> nat ind
R33268:33276 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33283:33285 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33277:33280 LF.Basics <> oddb def
R33282:33282 LF.Tactics <> n var
R33286:33289 LF.Basics <> true constr
R33261:33263 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33250:33258 LF.Tactics <> sillyfun1 def
R33260:33260 LF.Tactics <> n var
R33264:33267 LF.Basics <> true constr
R33321:33329 LF.Tactics <> sillyfun1 def
R33351:33354 LF.Basics <> ::nat_scope:x_'=?'_x not
R33351:33354 LF.Basics <> ::nat_scope:x_'=?'_x not
R33600:33607 LF.Tactics <> eqb_true thm
R33600:33607 LF.Tactics <> eqb_true thm
R33898:33901 LF.Basics <> ::nat_scope:x_'=?'_x not
R33898:33901 LF.Basics <> ::nat_scope:x_'=?'_x not
R33958:33965 LF.Tactics <> eqb_true thm
R33958:33965 LF.Tactics <> eqb_true thm
prf 34142:34163 <> bool_fn_applied_thrice
R34185:34188 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34189:34192 LF.Basics <> bool ind
R34181:34184 LF.Basics <> bool ind
R34200:34203 LF.Basics <> bool ind
R34220:34222 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34209:34209 LF.Tactics <> f var
R34212:34212 LF.Tactics <> f var
R34215:34215 LF.Tactics <> f var
R34217:34217 LF.Tactics <> b var
R34223:34223 LF.Tactics <> f var
R34225:34225 LF.Tactics <> b var
R34263:34266 LF.Basics <> true constr
R34263:34266 LF.Basics <> true constr
R34293:34297 LF.Basics <> false constr
R34293:34297 LF.Basics <> false constr
R34638:34642 LF.Basics <> false constr
R34638:34642 LF.Basics <> false constr
prf 37151:37157 <> eqb_sym
R37175:37177 Coq.Init.Datatypes <> nat ind
R37183:37183 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37190:37194 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37201:37201 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37185:37188 LF.Basics <> ::nat_scope:x_'=?'_x not
R37184:37184 LF.Tactics <> n var
R37189:37189 LF.Tactics <> m var
R37196:37199 LF.Basics <> ::nat_scope:x_'=?'_x not
R37195:37195 LF.Tactics <> m var
R37200:37200 LF.Tactics <> n var
prf 37761:37769 <> eqb_trans
R37802:37807 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37821:37826 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37833:37835 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37828:37831 LF.Basics <> ::nat_scope:x_'=?'_x not
R37827:37827 LF.Tactics <> n var
R37832:37832 LF.Tactics <> p var
R37836:37839 LF.Basics <> true constr
R37814:37816 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37809:37812 LF.Basics <> ::nat_scope:x_'=?'_x not
R37808:37808 LF.Tactics <> m var
R37813:37813 LF.Tactics <> p var
R37817:37820 LF.Basics <> true constr
R37795:37797 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37790:37793 LF.Basics <> ::nat_scope:x_'=?'_x not
R37789:37789 LF.Tactics <> n var
R37794:37794 LF.Tactics <> m var
R37798:37801 LF.Basics <> true constr
def 38584:38606 <> split_combine_statement
R38643:38646 LF.Poly <> list ind
R38650:38652 LF.Poly <> ::type_scope:x_'*'_x not
R38649:38649 LF.Tactics <> X var
R38653:38653 LF.Tactics <> Y var
R38662:38665 LF.Poly <> list ind
R38667:38667 LF.Tactics <> X var
R38675:38678 LF.Poly <> list ind
R38680:38680 LF.Tactics <> Y var
R38704:38709 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38731:38736 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38744:38746 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38737:38741 LF.Tactics <> split def
R38743:38743 LF.Tactics <> l var
R38747:38747 LF.Poly <> :::'('_x_','_x_')' not
R38750:38751 LF.Poly <> :::'('_x_','_x_')' not
R38754:38754 LF.Poly <> :::'('_x_','_x_')' not
R38748:38749 LF.Tactics <> l1 var
R38752:38753 LF.Tactics <> l2 var
R38719:38721 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38710:38715 LF.Poly <> length def
R38717:38718 LF.Tactics <> l1 var
R38722:38727 LF.Poly <> length def
R38729:38730 LF.Tactics <> l2 var
R38700:38702 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38686:38692 LF.Poly <> combine def
R38698:38699 LF.Tactics <> l2 var
R38694:38695 LF.Tactics <> l1 var
R38703:38703 LF.Tactics <> l var
prf 38766:38778 <> split_combine
R38782:38804 LF.Tactics <> split_combine_statement def
R39081:39085 LF.Tactics <> split def
R39081:39085 LF.Tactics <> split def
def 39504:39533 <> manual_grade_for_split_combine
R39537:39542 Coq.Init.Datatypes <> option ind
R39548:39548 LF.Poly <> ::type_scope:x_'*'_x not
R39545:39547 Coq.Init.Datatypes <> nat ind
R39549:39554 Coq.Strings.String <> string ind
R39560:39563 Coq.Init.Datatypes <> None constr
prf 39743:39757 <> filter_exercise
R39788:39791 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39792:39795 LF.Basics <> bool ind
R39787:39787 LF.Tactics <> X var
R39832:39832 LF.Tactics <> X var
R39843:39846 LF.Poly <> list ind
R39848:39848 LF.Tactics <> X var
R39880:39888 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39895:39897 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39889:39892 LF.Tactics <> test var
R39894:39894 LF.Tactics <> x var
R39898:39901 LF.Basics <> true constr
R39870:39872 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39857:39862 LF.Poly <> filter def
R39869:39869 LF.Tactics <> l var
R39864:39867 LF.Tactics <> test var
R39874:39877 LF.Poly <> :::x_'::'_x not
R39873:39873 LF.Tactics <> x var
R39878:39879 LF.Tactics <> lf var
def 41124:41130 <> forallb
R41152:41155 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41156:41159 LF.Basics <> bool ind
R41151:41151 LF.Tactics <> X var
R41167:41170 LF.Poly <> list ind
R41172:41172 LF.Tactics <> X var
R41177:41180 LF.Basics <> bool ind
R41193:41193 LF.Tactics <> l var
R41204:41205 LF.Poly <> :::'['_']' not
R41210:41213 LF.Basics <> true constr
R41220:41223 LF.Poly <> :::x_'::'_x not
R41235:41238 LF.Basics <> :::x_'&&'_x not
R41229:41232 LF.Tactics <> test var
R41239:41245 LF.Tactics <> forallb def
R41247:41250 LF.Tactics <> test var
def 41270:41283 <> test_forallb_1
R41311:41313 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41287:41293 LF.Tactics <> forallb def
R41300:41300 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41302:41302 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41304:41304 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41306:41306 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41308:41308 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41310:41310 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41295:41298 LF.Basics <> oddb def
R41314:41317 LF.Basics <> true constr
def 41354:41367 <> test_forallb_2
R41397:41399 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41371:41377 LF.Tactics <> forallb def
R41384:41384 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41390:41390 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41396:41396 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41385:41389 LF.Basics <> false constr
R41391:41395 LF.Basics <> false constr
R41379:41382 LF.Basics <> negb def
R41400:41403 LF.Basics <> true constr
def 41440:41453 <> test_forallb_3
R41480:41482 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41457:41463 LF.Tactics <> forallb def
R41471:41471 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41473:41473 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41475:41475 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41477:41477 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41479:41479 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41465:41469 LF.Basics <> evenb def
R41483:41487 LF.Basics <> false constr
def 41524:41537 <> test_forallb_4
R41559:41561 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41541:41547 LF.Tactics <> forallb def
R41557:41558 LF.Poly <> :::'['_']' not
R41550:41552 LF.Basics <> eqb def
R41562:41565 LF.Basics <> true constr
def 41603:41609 <> existsb
R41631:41634 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41635:41638 LF.Basics <> bool ind
R41630:41630 LF.Tactics <> X var
R41646:41649 LF.Poly <> list ind
R41651:41651 LF.Tactics <> X var
R41656:41659 LF.Basics <> bool ind
R41672:41672 LF.Tactics <> l var
R41683:41684 LF.Poly <> :::'['_']' not
R41689:41693 LF.Basics <> false constr
R41700:41703 LF.Poly <> :::x_'::'_x not
R41715:41718 LF.Basics <> :::x_'||'_x not
R41709:41712 LF.Tactics <> test var
R41719:41725 LF.Tactics <> existsb def
R41727:41730 LF.Tactics <> test var
def 41750:41763 <> test_existsb_1
R41792:41794 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41767:41773 LF.Tactics <> existsb def
R41783:41783 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41785:41785 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41787:41787 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41789:41789 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41791:41791 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41776:41778 LF.Basics <> eqb def
R41795:41799 LF.Basics <> false constr
def 41836:41849 <> test_existsb_2
R41890:41892 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41853:41859 LF.Tactics <> existsb def
R41873:41873 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41878:41878 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41883:41883 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41889:41889 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41874:41877 LF.Basics <> true constr
R41879:41882 LF.Basics <> true constr
R41884:41888 LF.Basics <> false constr
R41862:41865 LF.Basics <> andb def
R41867:41870 LF.Basics <> true constr
R41893:41896 LF.Basics <> true constr
def 41933:41946 <> test_existsb_3
R41976:41978 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41950:41956 LF.Tactics <> existsb def
R41963:41963 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41965:41965 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41967:41967 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41969:41969 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41971:41971 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41973:41973 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41975:41975 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41958:41961 LF.Basics <> oddb def
R41979:41982 LF.Basics <> true constr
def 42019:42032 <> test_existsb_4
R42052:42054 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42036:42042 LF.Tactics <> existsb def
R42050:42051 LF.Poly <> :::'['_']' not
R42044:42048 LF.Basics <> evenb def
R42055:42059 LF.Basics <> false constr
def 42099:42106 <> existsb'
R42128:42131 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42132:42135 LF.Basics <> bool ind
R42127:42127 LF.Tactics <> X var
R42143:42146 LF.Poly <> list ind
R42148:42148 LF.Tactics <> X var
R42153:42156 LF.Basics <> bool ind
R42163:42166 LF.Basics <> negb def
R42169:42175 LF.Tactics <> forallb def
R42207:42207 LF.Tactics <> l var
R42186:42186 LF.Tactics <> X var
R42192:42195 LF.Basics <> negb def
R42198:42201 LF.Tactics <> test var
R42203:42203 LF.Tactics <> x var
prf 42220:42235 <> existsb_existsb'
R42266:42269 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42270:42273 LF.Basics <> bool ind
R42265:42265 LF.Tactics <> X var
R42281:42284 LF.Poly <> list ind
R42286:42286 LF.Tactics <> X var
R42306:42308 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42292:42298 LF.Tactics <> existsb def
R42305:42305 LF.Tactics <> l var
R42300:42303 LF.Tactics <> test var
R42309:42316 LF.Tactics <> existsb' def
R42323:42323 LF.Tactics <> l var
R42318:42321 LF.Tactics <> test var
R42416:42423 LF.Tactics <> existsb' def
R42426:42432 LF.Tactics <> forallb def
